events {
  worker_connections 128;
}

http {

    # Notebooks
    server {
        listen 80;
        server_name notebooks.localhost-test.com;

        error_page 401 = @unauthError;
        error_page 403 = @unauthError;
        location @unauthError {
            return 302 http://ssso.localhost-test.com/login?redirect=$scheme://$http_host$request_uri;
        }

        location = /authenticate {
            internal;
            proxy_pass http://ssso/authenticate;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            if ($http_cookie ~* "ssso-session=([^;]+)(?:;|$)") {
                set $sessionToken "$1";
            }
            proxy_set_header X-Auth-Cookie-Token $sessionToken;
        }

        location /js/ {
            proxy_pass http://notebooks;
        }

        location /css/ {
            proxy_pass http://notebooks;
        }

        location = /login {
            return 302 http://ssso.localhost-test.com/login;
        }

        location = /logout {
            proxy_pass http://ssso/logout;
            proxy_set_header Host $host;
        }

        location / {
            auth_request /authenticate;
            auth_request_set $login_name $upstream_http_x_auth_user;
            auth_request_set $user_email $upstream_http_x_auth_user_email;
            auth_request_set $user_name $upstream_http_x_auth_user_name;
            proxy_pass http://notebooks;
            proxy_set_header Host $host;
            proxy_set_header X-Auth-User $login_name;
            proxy_set_header X-Auth-User-Email $user_email;
            proxy_set_header X-Auth-User-Name $user_name;
        }
    }

    # SSSO
    server {
        listen 80;
        server_name ssso.localhost-test.com;
        
        error_page 401 = @unauthError;
        error_page 403 = @unauthError;
        location @unauthError {
            return 302 http://ssso.localhost-test.com/login?redirect=$scheme://$http_host$request_uri;
        }

        location = /authenticate {
            internal;
            proxy_pass http://ssso/authenticate;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            if ($http_cookie ~* "ssso-session=([^;]+)(?:;|$)") {
                set $sessionToken "$1";
            }
            proxy_set_header X-Auth-Cookie-Token $sessionToken;
        }

        location = /login {
            proxy_pass http://ssso/login;
            proxy_set_header Host $host;
        }

        location = /logout {
            proxy_pass http://ssso/logout;
            proxy_set_header Host $host;
        }

        location /api/ {
            internal;
        }

        location / {
            auth_request /authenticate;
            auth_request_set $login_name $upstream_http_x_auth_user;
            proxy_pass http://ssso;
            proxy_set_header Host $host;
            proxy_set_header X-Auth-User $login_name;
        }

    }
}
